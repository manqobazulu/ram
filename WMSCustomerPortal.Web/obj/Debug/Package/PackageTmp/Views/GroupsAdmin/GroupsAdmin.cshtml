@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@* We will list the users here  *@
<h3 class="page-header">Groups Master List</h3>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">

            <div class="panel-heading" style="height: 40px;">
                <div style="float:left;">
                    Results
                </div>
                <div style="float:right;">
                    <button type="button" class="btn btn-primary btn-xs" id="btnCreateNewGroup">Create New Group</button>
                </div>
            </div>

            <!-- /.panel-heading -->
            <div class="panel-body">
                <div class="dataTable_wrapper" style="overflow:scroll;">
                    <table class="table table-striped table-bordered table-hover" id="dataTableGroupsList">
                        <thead>
                            <tr>
                                <th style="width:30px;">Group ID</th>
                                <th style="width:120px;">Group Name</th>
                                <th style="width:120px;">Group Description</th>
                                <th style="width:30px;"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-12 -->
</div>
<!-- /.row -->

@*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*@

<div class="modal fade bs-example-modal-lg" id="myModalEditGroup" tabindex="-1" role="dialog" aria-labelledby="myModalEditGroupLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" data-whatever="mdo">&times;</button>
                <h4 class="modal-title" id="myModalEditGroupLabel">Edit User</h4>
            </div>
            <div class="modal-body">

                <div class="panel panel-default">
                    <div class="panel-body">


                        <form role="form">


                            <div class="form-group">
                                <label style="display:none;" for="disabledSelect">GroupID</label>
                                <input style="display:none;" class="form-control" id="txtGroupID" name="txtGroupID" type="text" placeholder="Group ID" disabled>
                            </div>

                            <div class="form-group">
                                @*<label for="disabledSelect">Group Name</label>*@
                                <label>Group Name</label>
                                <input class="form-control" id="txtGroupName" name="txtGroupName" type="text" placeholder="Group Name">
                            </div>

                            <div class="form-group">
                                <label>Group Description</label>
                                <input class="form-control" id="txtGroupDescription" name="txtGroupDescription" type="text" placeholder="Group Description">
                            </div>

                            <div class="form-group" style="float:right;">
                                @*<button type="submit" id="btnSaveGroup" class="btn btn-primary">Save Group</button>&nbsp;
                                <button type="submit" id="btnSaveRolesGroupsAssociations" class="btn btn-primary">Save RolesGroupsAssoc</button>*@
                                <button type="button" id="btnSaveAll" class="btn btn-primary">Save</button>
                            </div>
                        </form>

                    </div>
                </div>
                <div class="panel panel-default">
                    @* Lets have a datagrid here so we can select the groups the user belongs to easily *@
                    <div class="dataTable_wrapper" style="overflow:scroll;">
                        <table class="table table-striped table-bordered table-hover" id="dataTableRolesGroupsList">
                            <thead>
                                <tr>
                                    <th>Selected</th>
                                    <th>Role ID</th>
                                    <th>Role Name</th>
                                    <th>Role Description</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <div id="loading" class="spinner">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*@


@* References *@
<!-- DataTables CSS -->
<link href="~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet">

<link href="~/bootstrap/css/bootstrap.css" rel="stylesheet" />
<!-- DataTables Responsive CSS -->
<link href="~/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">

<script src="~/Scripts/jquery-1.10.2.js"></script>
<!-- DataTables JavaScript -->
<script src="~/bower_components/DataTables/media/js/jquery.dataTables.min.js"></script>
<script src="~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<script src="~/Scripts/jquery.tmpl.min.js"></script>

<link href="~/Content/Spinner.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/MaskedInput/jquery.maskedinput.min.js"></script>
<script src="~/Scripts/BestUpper/jquery.bestupper.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker-1.4.0/js/bootstrap-datepicker.js"></script>
<link href="~/Scripts/bootstrap-datepicker-1.4.0/css/bootstrap-datepicker.css" rel="stylesheet">


<script>


    var oGroupsTable = null;
    var oRolesTable = null;


    var simple_checkbox = function (data, type, full, meta) {
        var is_checked = data == true ? "checked" : "";
        return '<input type="checkbox" class="checkSelectedbox" ' +
            is_checked + ' />';
    }

    $(document).ready(function () {

        var $loading = $('#loading');
        $(document).ajaxStart(function () {
            $loading.show();
        }).ajaxStop(function () {
            $loading.hide();
        });

       // PopulateGroupsDataTable();
        PopulateGroupsDataGrid();
        WireAdditionalActions();
    });



    //we will call the method to delete this group
    function DeleteGroup(dRow) {

        var groupID = dRow.Id;
        var parameters = JSON.stringify({
            groupID: groupID
        });

        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("DeleteGroup", "GroupsAdmin")',
            data: parameters,
            dataType: "json",
            success: function (response) {

                var result = response.Result;
                var saveResponse = response.SaveResponse;

                if (result.search(/error/i) == -1) {
                    PopulateGroupsDataGrid();

                }
                else {
                    swal(response.SaveResponse.Details);

                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                swal({
                    title: 'Error',
                    text: 'There was an error:' + errorThrown,
                    type: 'error',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#D42E12'
                });
            }
        });

    }

    function SaveGroupDetails() {

        $("#btnSaveAll").attr("disabled", "disabled");

        var selectedGroupID = $('#txtGroupID').val();
        var selectedGroupName = $('#txtGroupName').val();
        var selectedGroupDescription = $('#txtGroupDescription').val();


        var parameters = JSON.stringify({
            groupName: selectedGroupName,
            groupID: selectedGroupID,
            groupDescription: selectedGroupDescription
        });

        try {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveGroupDetails", "GroupsAdmin")',
                data: parameters,
                dataType: "json",

                success: function (response) {

                    var result = response.Result;
                    var saveResponse = response.SaveResponse;

                    if (result.search(/error/i) == -1) {
                        SaveGroupRoleAssociations()
                    }
                    else {
                        swal(response.SaveResponse.Details);
                        $("#btnSaveAll").removeAttr("disabled", "disabled");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    swal({
                        title: 'Error',
                        text: 'There was an error:' + errorThrown,
                        type: 'error',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#D42E12'
                    });
                }
            });
        }
        catch (err) {
            swal(err);
        }

      

    }


    //we need to save the groups roles associations somewhere
    function SaveGroupRoleAssociations() {

        var rowDataObjects = new Array();
     
        //var tablx = $(".checkSelectedbox:checked");
        oRolesTable.$(".checkSelectedbox:checked").each(function (index, row) {
          
            var rw = oRolesTable.row($(this).parents('tr'));
            var roleID = rw.data().RoleId;
            rowDataObjects.push(roleID);// this should work, if not try aReturn.push($(row));
        });

      
        var selectedGroupID = $('#txtGroupID').val();
      
        var parameters = JSON.stringify({
            groupRoles: rowDataObjects,
            groupID: selectedGroupID
        });


        try {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveGroupRoleAssociations", "GroupsAdmin")',
                data: parameters,
                dataType: "json",

                success: function (response) {

                    var result = response.Result;
                    var saveResponse = response.SaveResponse;

                    if (result.search(/error/i) == -1) {
                        PopulateGroupsDataGrid()
                        $('#myModalEditGroup').modal('hide');
                    }
                    else {
                        swal(response.SaveResponse.Details);

                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    swal({
                        title: 'Error',
                        text: 'There was an error:' + errorThrown,
                        type: 'error',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#D42E12'
                    });
                }
            }); 
        }
        catch (err) {
            swal(err);
        }
    }

    //populates the roles datagrid for the specificic group id
    function PopulateEditGroup(dRow) {

        $('#txtGroupID').val(dRow.Id);
        $('#txtGroupName').val(dRow.Name);
        $('#txtGroupDescription').val(dRow.Description);

        PopulateGroupsRoleDataGrid(dRow.Id);

    }

   //populates the groups roles grid
    function PopulateGroupsRoleDataGrid(groupID) {

        if (oRolesTable != null) {
            oRolesTable.destroy();
        }

        oRolesTable = $('#dataTableRolesGroupsList').DataTable({
            "order": [[1, "asc"]],
            "lengthMenu": [[20, 30, 40, -1], [20, 30, 40, "All"]],
            "bJQueryUI": true,
            "bServerSide": false,
            "sAjaxSource": '@Url.Action("GetGroupsRolesList", "GroupsAdmin")',
            "bProcessing": true,
            "fnServerData": function (sSource, parameters, fnCallback) {
                parameters.push({ "name": "groupID", "value": groupID });
                //TODO: we need to gret the datarow id
                $.getJSON(sSource, parameters, function (json) {
                    fnCallback(json)
                });
            },
            "columns": [
                            {
                                "data": "BelongsTo",
                                "render": simple_checkbox

                            },
                           // },
                           // "render": simple_checkbox  },
                           // { "data": "BelongsTo" },
                            {
                                "data": "RoleId",
                                "visible": false
                            },
                            { "data": "RoleName" },
                            { "data": "RoleDescription" }

            ]
        });

    }
    

    function PopulateGroupsDataGrid() {

        if (oGroupsTable != null) {
            oGroupsTable.destroy();
        }

        oGroupsTable = $('#dataTableGroupsList').DataTable({
            "order": [[0, "desc"]],
            "lengthMenu": [[20, 30, 40, -1], [20, 30, 40, "All"]],
            "bJQueryUI": true,
            "bServerSide": false,
            "sAjaxSource": '@Url.Action("GetGroupsItemList", "GroupsAdmin")',
            "bProcessing": true,
            "fnServerData": function (sSource, parameters, fnCallback) {
                parameters.push({ "name": "filter", "value": "" });
                //TODO: we need to gret the datarow id
                $.getJSON(sSource, parameters, function (json) {
                    fnCallback(json)
                });
            },
            "columns": [
                            {
                                "data": "Id",
                                "visible": false
                            },
                            { "data": "Name" },
                            { "data": "Description" },

                            {
                                "targets": -1,
                                "data": null,
                                "defaultContent": "<button edit class='btn btn-primary btn-xs'>Edit Group</button>&nbsp;<button delete class='btn btn-primary btn-xs'>Delete</button>  "
                            }
            ]
        });


        //wire the onclick event

        $('#dataTableGroupsList tbody').on('click', 'button[edit]', function () {

            $("#btnSaveAll").removeAttr("disabled", "disabled");
            var dRow = oGroupsTable.row($(this).parents('tr'));

            //populate the value of the line items dialogxxxxxxxx
            PopulateEditGroup(dRow.data());

            //PopulateGroupsDataGrid();
            //set the keyboard to not be valid for the parent
            $('#myModalEditGroup').modal({
                keyboard: false
            });

        });


        $('#dataTableGroupsList tbody').on('click', 'button[delete]', function () {

            var row = oGroupsTable.row($(this).parents('tr'));

            swal({
                title: "Are you sure you want to delete Group " + row.data().Name + "?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "OK",
                closeOnConfirm: false
            }, function () {
                swal("Deleted!", "Group " + row.data().Name + " deleted.", "success");
                DeleteGroup(row.data());
            });

        });
    }

    function WireAdditionalActions() {

        $("#btnCreateNewGroup").on('click', function () {
            //redirect to the create new group action
            var ref = '@Url.Action("CreateGroup", "GroupsAdmin")';
            location.href = ref;
        });
     

        $("#btnSaveAll").on("click", function () {
            SaveGroupDetails();
        });
    }
    function OpenEdit(id) {
      //  alert(id);
    }

 
</script>





<style>
    .modal-dialog {
        width: 1000px;
    }
</style>








