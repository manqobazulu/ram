@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@* We will list the users here  *@
<h3 class="page-header">Principal Groups Master List</h3>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">

            @* @Html.ActionLink("Create New Group", "CreateGroup", "GroupsAdmin")*@
            <div class="panel-heading">
                Results
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">


                <div class="dataTable_wrapper" style="overflow:scroll;">
                    <table class="table table-striped table-bordered table-hover" id="dataTableGroupsList">
                        <thead>
                            <tr>
                                <th>Group ID</th>
                                <th style="width:120px;">Group Name</th>
                                <th style="width:120px;">Group Description</th>
                                <th style="width:30px;"></th>
                             </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>
    <!-- /.col-lg-12 -->
</div>
<!-- /.row -->
@*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*@

<div class="modal fade bs-example-modal-lg" id="myModalEditGroup" tabindex="-1" role="dialog" aria-labelledby="myModalEditGroupLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" data-whatever="mdo">&times;</button>
                <h4 class="modal-title" id="myModalEditGroupLabel">Edit / Add  User</h4>
            </div>
            <div class="modal-body">

                <div class="panel panel-default">
                    <div class="panel-body">


                        <form role="form">


                            <div class="form-group">
                                <label style="display:none;" for="disabledSelect">GroupID</label>
                                <input style="display:none;" disabled class="form-control" id="txtGroupID" name="txtGroupID" type="text" placeholder="Group ID" >
                            </div>

                            <div class="form-group">
                                @*<label for="disabledSelect">Group Name</label>*@
                                <label>Group Name</label>
                                <input disabled class="form-control" id="txtGroupName" name="txtGroupName" type="text" placeholder="Group Name">
                            </div>

                            <div class="form-group">
                                <label>Group Description</label>
                                <input disabled class="form-control" id="txtGroupDescription" name="txtGroupDescription" type="text" placeholder="Group Description">
                            </div>

                            <div class="form-group" style="float:right;">

                                <button type="button" id="btnSaveGroupsPrincipalsAssociations" class="btn btn-primary">Save</button>
                            </div>
                        </form>

                    </div>
                </div>
                <div class="panel panel-default">
                    @* Lets have a datagrid here so we can select the groups the user belongs to easily *@
                    <div class="dataTable_wrapper">
                        <table class="table table-striped table-bordered table-hover" id="dataTableGroupsPrincipalList">
                            <thead>
                                <tr>
                                    <th>Selected</th>
                                    <th>PrincipalID</th>
                                    <th>PrincipalCode</th>
                                    <th>PrincipalName</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
            <div id="loading" class="spinner">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
@*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*@


@* References *@
<!-- DataTables CSS -->
<link href="~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet">

<link href="~/bootstrap/css/bootstrap.css" rel="stylesheet" />
<!-- DataTables Responsive CSS -->
<link href="~/bower_components/datatables-responsive/css/dataTables.responsive.css" rel="stylesheet">

<script src="~/Scripts/jquery-1.10.2.js"></script>
<!-- DataTables JavaScript -->
<script src="~/bower_components/DataTables/media/js/jquery.dataTables.min.js"></script>
<script src="~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js"></script>

<script src="~/Scripts/jquery.tmpl.min.js"></script>


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/MaskedInput/jquery.maskedinput.min.js"></script>
<script src="~/Scripts/BestUpper/jquery.bestupper.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker-1.4.0/js/bootstrap-datepicker.js"></script>
<link href="~/Scripts/bootstrap-datepicker-1.4.0/css/bootstrap-datepicker.css" rel="stylesheet">


<script>


    var oGroupsTable = null;
    var oPrincipalsTable = null;


    var simple_checkbox = function (data, type, full, meta) {
        var is_checked = data == true ? "checked" : "";
        return '<input type="checkbox" class="checkSelectedbox" ' +
            is_checked + ' />';
    }

    $(document).ready(function () {

        var $loading = $('#loading');
        $(document).ajaxStart(function () {
            $loading.show();
        }).ajaxStop(function () {
            $loading.hide();
        });

       // PopulateGroupsDataTable();
        PopulateGroupsDataGrid();
        WireAdditionalActions();
    });

    function SaveGroupPrincipalAssociations() {

        $("#btnSaveGroupsPrincipalsAssociations").attr("disabled", "disabled");

        var rowDataObjects = new Array();

        oPrincipalsTable.$(".checkSelectedbox:checked").each(function (index, row) {

            var rw = oPrincipalsTable.row($(this).parents('tr'));
            var principalID = rw.data().PrincipalID;
            rowDataObjects.push(principalID);// this should work, if not try aReturn.push($(row));
        });

        var selectedGroupID = $('#txtGroupID').val();
        var parameters = JSON.stringify({
            groupPrincipals: rowDataObjects,
            groupID: selectedGroupID

        });

        try {

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("SaveGroupPrincipalAssociations", "GroupsAdmin")',
                data: parameters,
                dataType: "json",

                success: function (response) {

                    var result = response.Result;
                    var saveResponse = response.SaveResponse;

                    if (result.search(/error/i) == -1) {
                        $('#myModalEditGroup').modal('hide');
                    }
                    else {
                        swal(response.SaveResponse.Details);
                        $("#btnSaveGroupsPrincipalsAssociations").removeAttr("disabled", "disabled");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    swal({
                        title: 'Error',
                        text: 'There was an error:' + errorThrown,
                        type: 'error',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#D42E12'
                    });
                }
            });

        }
        catch (err) {
            swal(err);
        }


    }

    //populates the roles datagrid for the specificic group id
    function PopulateEditGroup(dRow) {

        $('#txtGroupID').val(dRow.Id);
        $('#txtGroupName').val(dRow.Name);
        $('#txtGroupDescription').val(dRow.Description);

        PopulateGroupsPrincipalsDataGrid(dRow.Id);
    }

   //populates the groups roles grid
    function PopulateGroupsPrincipalsDataGrid(groupID) {

        if (oPrincipalsTable != null) {
            oPrincipalsTable.destroy();
        }

        oPrincipalsTable = $('#dataTableGroupsPrincipalList').DataTable({
            "order": [[0, "desc"]],
            "lengthMenu": [[20, 30, 40, -1], [20, 30, 40, "All"]],
            "bJQueryUI": true,
            "bServerSide": false,
            "sAjaxSource": '@Url.Action("GetGroupsPrincipalsList", "GroupsAdmin")',
            "bProcessing": true,
            "fnServerData": function (sSource, parameters, fnCallback) {
                parameters.push({ "name": "groupID", "value": groupID });
                //TODO: we need to gret the datarow id
                $.getJSON(sSource, parameters, function (json) {
                    fnCallback(json)
                });
            },
            "columns": [
                            {
                                "data": "BelongsTo",
                                "render": simple_checkbox
                            },
                            { "data": "PrincipalID" },
                            { "data": "PrincipalCode" },
                            { "data": "PrincipalName" }

            ]
        });

    }

    function PopulateGroupsDataGrid() {

        if (oGroupsTable != null) {
            oGroupsTable.destroy();
        }

        oGroupsTable = $('#dataTableGroupsList').DataTable({
            "order": [[0, "desc"]],
            "lengthMenu": [[20, 30, 40, -1], [20, 30, 40, "All"]],
            "bJQueryUI": true,
            "bServerSide": false,
            "sAjaxSource": '@Url.Action("GetGroupsItemList", "GroupsAdmin")',
            "bProcessing": true,
            "fnServerData": function (sSource, parameters, fnCallback) {
                parameters.push({ "name": "filter", "value": "" });
                //TODO: we need to gret the datarow id
                $.getJSON(sSource, parameters, function (json) {
                    fnCallback(json)
                });
            },
            "columns": [
                            {
                                "data": "Id",
                                "visible": false
                            },
                            { "data": "Name" },
                            { "data": "Description" },

                            {
                                "targets": -1,
                                "data": null,
                                "defaultContent": "<button edit class='btn btn-primary btn-xs'>Associations</button>"
                            }
            ]
        });


        //wire the onclick event

        $('#dataTableGroupsList tbody').on('click', 'button[edit]', function () {

            $("#btnSaveGroupsPrincipalsAssociations").removeAttr("disabled", "disabled");
            var dRow = oGroupsTable.row($(this).parents('tr'));

            //populate the value of the line items dialogxxxxxxxx
           PopulateEditGroup(dRow.data());

            //set the keyboard to not be valid for the parent
            $('#myModalEditGroup').modal({
                keyboard: false
            });
        });
    }


    function WireAdditionalActions() {

        $('#btnSaveGroupsPrincipalsAssociations').on('click', function () {
            SaveGroupPrincipalAssociations();
        });


    }

</script>





<style>
    .modal-dialog {
        width: 1000px;
    }
</style>








